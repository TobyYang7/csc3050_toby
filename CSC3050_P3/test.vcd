$date
	Tue Oct 31 09:13:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_alu $end
$var wire 32 ! result [31:0] $end
$var wire 3 " flags [2:0] $end
$var reg 32 # instruction [31:0] $end
$var reg 32 $ regA [31:0] $end
$var reg 32 % regB [31:0] $end
$scope module test $end
$var wire 32 & instruction [31:0] $end
$var wire 32 ' regA [31:0] $end
$var wire 32 ( regB [31:0] $end
$var wire 6 ) opcode [5:0] $end
$var reg 3 * flags [2:0] $end
$var reg 6 + funct [5:0] $end
$var reg 16 , immediate [15:0] $end
$var reg 5 - rd [4:0] $end
$var reg 32 . result [31:0] $end
$var reg 5 / rs [4:0] $end
$var reg 32 0 rs_reg [31:0] $end
$var reg 5 1 rt [4:0] $end
$var reg 32 2 rt_reg [31:0] $end
$var reg 5 3 shamt [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1000
b11111111111111111111111111111111 !
b11111111111111111111111111111111 .
b0 "
b0 *
b11111111111111111111111111111110 2
b1 0
b100001 +
b0 3
b0 -
b1 1
b0 /
b0 )
b11111111111111111111111111111110 %
b11111111111111111111111111111110 (
b1 $
b1 '
b10000000000100001 #
b10000000000100001 &
#2000
b10000000000000000111111111111110 !
b10000000000000000111111111111110 .
b1 2
b1111111111111111111111111111111 0
b111111111111111 ,
b1001 )
b1 %
b1 (
b1111111111111111111111111111111 $
b1111111111111111111111111111111 '
b100100000000010111111111111111 #
b100100000000010111111111111111 &
